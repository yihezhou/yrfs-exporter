// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: proto/agent.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//grpc client: get client stats
type ClientStatsPara struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//node_type = 1, request opcounter for mds
	//node_type = 2, request opcounter for oss
	NodeType uint32 `protobuf:"varint,1,opt,name=node_type,json=nodeType,proto3" json:"node_type,omitempty"`
	//true: hide server ip
	HideInternalIps bool `protobuf:"varint,2,opt,name=hide_internal_ips,json=hideInternalIps,proto3" json:"hide_internal_ips,omitempty"`
	//true: return all client even if opcounter is zero
	ReturnZeroStats bool `protobuf:"varint,3,opt,name=return_zero_stats,json=returnZeroStats,proto3" json:"return_zero_stats,omitempty"`
	//client_stats_type = 0, sum of external clients
	//client_stats_type = 1, sum of internal and external clients
	//client_stats_type = 2, sum of internal clients
	ClientStatsType uint32 `protobuf:"varint,4,opt,name=client_stats_type,json=clientStatsType,proto3" json:"client_stats_type,omitempty"`
}

func (x *ClientStatsPara) Reset() {
	*x = ClientStatsPara{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientStatsPara) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientStatsPara) ProtoMessage() {}

func (x *ClientStatsPara) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientStatsPara.ProtoReflect.Descriptor instead.
func (*ClientStatsPara) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{0}
}

func (x *ClientStatsPara) GetNodeType() uint32 {
	if x != nil {
		return x.NodeType
	}
	return 0
}

func (x *ClientStatsPara) GetHideInternalIps() bool {
	if x != nil {
		return x.HideInternalIps
	}
	return false
}

func (x *ClientStatsPara) GetReturnZeroStats() bool {
	if x != nil {
		return x.ReturnZeroStats
	}
	return false
}

func (x *ClientStatsPara) GetClientStatsType() uint32 {
	if x != nil {
		return x.ClientStatsType
	}
	return 0
}

//grpc server: return client stats
type ClientStatsRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//client ip
	Ip string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	//true: client ip is online
	Online bool `protobuf:"varint,2,opt,name=online,proto3" json:"online,omitempty"`
	//mds or oss opcounter
	Opcounters []uint64 `protobuf:"varint,3,rep,packed,name=opcounters,proto3" json:"opcounters,omitempty"`
}

func (x *ClientStatsRet) Reset() {
	*x = ClientStatsRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientStatsRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientStatsRet) ProtoMessage() {}

func (x *ClientStatsRet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientStatsRet.ProtoReflect.Descriptor instead.
func (*ClientStatsRet) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{1}
}

func (x *ClientStatsRet) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ClientStatsRet) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

func (x *ClientStatsRet) GetOpcounters() []uint64 {
	if x != nil {
		return x.Opcounters
	}
	return nil
}

//grpc client: get sla info
type GetSlaInfoPara struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//true: contains sla info of root
	WithRoot bool `protobuf:"varint,1,opt,name=with_root,json=withRoot,proto3" json:"with_root,omitempty"`
}

func (x *GetSlaInfoPara) Reset() {
	*x = GetSlaInfoPara{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSlaInfoPara) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSlaInfoPara) ProtoMessage() {}

func (x *GetSlaInfoPara) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSlaInfoPara.ProtoReflect.Descriptor instead.
func (*GetSlaInfoPara) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{2}
}

func (x *GetSlaInfoPara) GetWithRoot() bool {
	if x != nil {
		return x.WithRoot
	}
	return false
}

//grpc server: return sla info
type GetSlaInfoRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//the path
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	//entryID of path
	EntryId string `protobuf:"bytes,2,opt,name=entry_id,json=entryId,proto3" json:"entry_id,omitempty"`
	//sla value
	SlaValue []uint64 `protobuf:"varint,3,rep,packed,name=sla_value,json=slaValue,proto3" json:"sla_value,omitempty"`
}

func (x *GetSlaInfoRet) Reset() {
	*x = GetSlaInfoRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSlaInfoRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSlaInfoRet) ProtoMessage() {}

func (x *GetSlaInfoRet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSlaInfoRet.ProtoReflect.Descriptor instead.
func (*GetSlaInfoRet) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{3}
}

func (x *GetSlaInfoRet) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *GetSlaInfoRet) GetEntryId() string {
	if x != nil {
		return x.EntryId
	}
	return ""
}

func (x *GetSlaInfoRet) GetSlaValue() []uint64 {
	if x != nil {
		return x.SlaValue
	}
	return nil
}

//value with timestamp key
//this message is used for MdsOverviewRet/OssOverviewRet
type TimeValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time  uint64 `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	Value uint64 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *TimeValue) Reset() {
	*x = TimeValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeValue) ProtoMessage() {}

func (x *TimeValue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeValue.ProtoReflect.Descriptor instead.
func (*TimeValue) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{4}
}

func (x *TimeValue) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *TimeValue) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

//server node information
type ServerNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//node name
	NodeName string `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	//node num id
	NodeNumId uint32 `protobuf:"varint,2,opt,name=node_num_id,json=nodeNumId,proto3" json:"node_num_id,omitempty"`
	//node is noline
	//true: server node is online
	Online bool `protobuf:"varint,3,opt,name=online,proto3" json:"online,omitempty"`
}

func (x *ServerNode) Reset() {
	*x = ServerNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerNode) ProtoMessage() {}

func (x *ServerNode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerNode.ProtoReflect.Descriptor instead.
func (*ServerNode) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{5}
}

func (x *ServerNode) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *ServerNode) GetNodeNumId() uint32 {
	if x != nil {
		return x.NodeNumId
	}
	return 0
}

func (x *ServerNode) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

//grpc client: get mds overview
type MdsOverviewPara struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unused bool `protobuf:"varint,1,opt,name=unused,proto3" json:"unused,omitempty"`
}

func (x *MdsOverviewPara) Reset() {
	*x = MdsOverviewPara{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MdsOverviewPara) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MdsOverviewPara) ProtoMessage() {}

func (x *MdsOverviewPara) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MdsOverviewPara.ProtoReflect.Descriptor instead.
func (*MdsOverviewPara) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{6}
}

func (x *MdsOverviewPara) GetUnused() bool {
	if x != nil {
		return x.Unused
	}
	return false
}

//grpc server: return mds overview
type MdsOverviewRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiskSpaceTotal uint64        `protobuf:"varint,1,opt,name=disk_space_total,json=diskSpaceTotal,proto3" json:"disk_space_total,omitempty"`
	DiskSpaceFree  uint64        `protobuf:"varint,2,opt,name=disk_space_free,json=diskSpaceFree,proto3" json:"disk_space_free,omitempty"`
	DiskSpaceUsed  uint64        `protobuf:"varint,3,opt,name=disk_space_used,json=diskSpaceUsed,proto3" json:"disk_space_used,omitempty"`
	InodeSpaceUsed uint64        `protobuf:"varint,4,opt,name=inode_space_used,json=inodeSpaceUsed,proto3" json:"inode_space_used,omitempty"`
	NodeInfo       []*ServerNode `protobuf:"bytes,5,rep,name=node_info,json=nodeInfo,proto3" json:"node_info,omitempty"`
	WorkRequests   []*TimeValue  `protobuf:"bytes,6,rep,name=work_requests,json=workRequests,proto3" json:"work_requests,omitempty"`
	QueuedRequests []*TimeValue  `protobuf:"bytes,7,rep,name=queued_requests,json=queuedRequests,proto3" json:"queued_requests,omitempty"`
}

func (x *MdsOverviewRet) Reset() {
	*x = MdsOverviewRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MdsOverviewRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MdsOverviewRet) ProtoMessage() {}

func (x *MdsOverviewRet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MdsOverviewRet.ProtoReflect.Descriptor instead.
func (*MdsOverviewRet) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{7}
}

func (x *MdsOverviewRet) GetDiskSpaceTotal() uint64 {
	if x != nil {
		return x.DiskSpaceTotal
	}
	return 0
}

func (x *MdsOverviewRet) GetDiskSpaceFree() uint64 {
	if x != nil {
		return x.DiskSpaceFree
	}
	return 0
}

func (x *MdsOverviewRet) GetDiskSpaceUsed() uint64 {
	if x != nil {
		return x.DiskSpaceUsed
	}
	return 0
}

func (x *MdsOverviewRet) GetInodeSpaceUsed() uint64 {
	if x != nil {
		return x.InodeSpaceUsed
	}
	return 0
}

func (x *MdsOverviewRet) GetNodeInfo() []*ServerNode {
	if x != nil {
		return x.NodeInfo
	}
	return nil
}

func (x *MdsOverviewRet) GetWorkRequests() []*TimeValue {
	if x != nil {
		return x.WorkRequests
	}
	return nil
}

func (x *MdsOverviewRet) GetQueuedRequests() []*TimeValue {
	if x != nil {
		return x.QueuedRequests
	}
	return nil
}

//grpc client: get oss overview
type OssOverviewPara struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unused bool `protobuf:"varint,1,opt,name=unused,proto3" json:"unused,omitempty"`
}

func (x *OssOverviewPara) Reset() {
	*x = OssOverviewPara{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OssOverviewPara) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OssOverviewPara) ProtoMessage() {}

func (x *OssOverviewPara) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OssOverviewPara.ProtoReflect.Descriptor instead.
func (*OssOverviewPara) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{8}
}

func (x *OssOverviewPara) GetUnused() bool {
	if x != nil {
		return x.Unused
	}
	return false
}

//grpc server: return oss overview
type OssOverviewRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiskSpaceTotal      uint64        `protobuf:"varint,1,opt,name=disk_space_total,json=diskSpaceTotal,proto3" json:"disk_space_total,omitempty"`
	DiskSpaceFree       uint64        `protobuf:"varint,2,opt,name=disk_space_free,json=diskSpaceFree,proto3" json:"disk_space_free,omitempty"`
	DiskSpaceUsed       uint64        `protobuf:"varint,3,opt,name=disk_space_used,json=diskSpaceUsed,proto3" json:"disk_space_used,omitempty"`
	DiskReadSum         uint64        `protobuf:"varint,4,opt,name=disk_read_sum,json=diskReadSum,proto3" json:"disk_read_sum,omitempty"`
	DiskWriteSum        uint64        `protobuf:"varint,5,opt,name=disk_write_sum,json=diskWriteSum,proto3" json:"disk_write_sum,omitempty"`
	NodeInfo            []*ServerNode `protobuf:"bytes,6,rep,name=node_info,json=nodeInfo,proto3" json:"node_info,omitempty"`
	DiskPerfRead        []*TimeValue  `protobuf:"bytes,7,rep,name=disk_perf_read,json=diskPerfRead,proto3" json:"disk_perf_read,omitempty"`
	DiskPerfAverageRead []*TimeValue  `protobuf:"bytes,8,rep,name=disk_perf_average_read,json=diskPerfAverageRead,proto3" json:"disk_perf_average_read,omitempty"`
	DiskPerfWrite       []*TimeValue  `protobuf:"bytes,9,rep,name=disk_perf_write,json=diskPerfWrite,proto3" json:"disk_perf_write,omitempty"`
	DiskPerAverageWrite []*TimeValue  `protobuf:"bytes,10,rep,name=disk_per_average_write,json=diskPerAverageWrite,proto3" json:"disk_per_average_write,omitempty"`
}

func (x *OssOverviewRet) Reset() {
	*x = OssOverviewRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OssOverviewRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OssOverviewRet) ProtoMessage() {}

func (x *OssOverviewRet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OssOverviewRet.ProtoReflect.Descriptor instead.
func (*OssOverviewRet) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{9}
}

func (x *OssOverviewRet) GetDiskSpaceTotal() uint64 {
	if x != nil {
		return x.DiskSpaceTotal
	}
	return 0
}

func (x *OssOverviewRet) GetDiskSpaceFree() uint64 {
	if x != nil {
		return x.DiskSpaceFree
	}
	return 0
}

func (x *OssOverviewRet) GetDiskSpaceUsed() uint64 {
	if x != nil {
		return x.DiskSpaceUsed
	}
	return 0
}

func (x *OssOverviewRet) GetDiskReadSum() uint64 {
	if x != nil {
		return x.DiskReadSum
	}
	return 0
}

func (x *OssOverviewRet) GetDiskWriteSum() uint64 {
	if x != nil {
		return x.DiskWriteSum
	}
	return 0
}

func (x *OssOverviewRet) GetNodeInfo() []*ServerNode {
	if x != nil {
		return x.NodeInfo
	}
	return nil
}

func (x *OssOverviewRet) GetDiskPerfRead() []*TimeValue {
	if x != nil {
		return x.DiskPerfRead
	}
	return nil
}

func (x *OssOverviewRet) GetDiskPerfAverageRead() []*TimeValue {
	if x != nil {
		return x.DiskPerfAverageRead
	}
	return nil
}

func (x *OssOverviewRet) GetDiskPerfWrite() []*TimeValue {
	if x != nil {
		return x.DiskPerfWrite
	}
	return nil
}

func (x *OssOverviewRet) GetDiskPerAverageWrite() []*TimeValue {
	if x != nil {
		return x.DiskPerAverageWrite
	}
	return nil
}

//grpc client: get node list
type NodeListPara struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//true: return client node information
	Client bool `protobuf:"varint,1,opt,name=client,proto3" json:"client,omitempty"`
	//This value is meaningful only if client is set to true
	//true: hide server ip
	HideInternalIps bool `protobuf:"varint,2,opt,name=hide_internal_ips,json=hideInternalIps,proto3" json:"hide_internal_ips,omitempty"`
	//true: return agent information
	Agent bool `protobuf:"varint,3,opt,name=agent,proto3" json:"agent,omitempty"`
}

func (x *NodeListPara) Reset() {
	*x = NodeListPara{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeListPara) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeListPara) ProtoMessage() {}

func (x *NodeListPara) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeListPara.ProtoReflect.Descriptor instead.
func (*NodeListPara) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{10}
}

func (x *NodeListPara) GetClient() bool {
	if x != nil {
		return x.Client
	}
	return false
}

func (x *NodeListPara) GetHideInternalIps() bool {
	if x != nil {
		return x.HideInternalIps
	}
	return false
}

func (x *NodeListPara) GetAgent() bool {
	if x != nil {
		return x.Agent
	}
	return false
}

//node information
type NodeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//type = 1: mds
	//type = 2: oss
	//type = 3: client
	//type = 4: mgr
	//type = 5: agent
	Type uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	//node num id
	NodeNumId uint32 `protobuf:"varint,2,opt,name=node_num_id,json=nodeNumId,proto3" json:"node_num_id,omitempty"`
	//node num name
	NodeName string `protobuf:"bytes,3,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
}

func (x *NodeInfo) Reset() {
	*x = NodeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInfo) ProtoMessage() {}

func (x *NodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInfo.ProtoReflect.Descriptor instead.
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{11}
}

func (x *NodeInfo) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *NodeInfo) GetNodeNumId() uint32 {
	if x != nil {
		return x.NodeNumId
	}
	return 0
}

func (x *NodeInfo) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

//grpc server: return node list
type NodeListRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//the list of node info
	NodeLists []*NodeInfo `protobuf:"bytes,1,rep,name=node_lists,json=nodeLists,proto3" json:"node_lists,omitempty"`
}

func (x *NodeListRet) Reset() {
	*x = NodeListRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeListRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeListRet) ProtoMessage() {}

func (x *NodeListRet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeListRet.ProtoReflect.Descriptor instead.
func (*NodeListRet) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{12}
}

func (x *NodeListRet) GetNodeLists() []*NodeInfo {
	if x != nil {
		return x.NodeLists
	}
	return nil
}

//grpc client: get performance
type PerformancePara struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//specify which dir you want to get performance
	//if no path is specified, all performance are returned
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *PerformancePara) Reset() {
	*x = PerformancePara{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PerformancePara) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerformancePara) ProtoMessage() {}

func (x *PerformancePara) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerformancePara.ProtoReflect.Descriptor instead.
func (*PerformancePara) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{13}
}

func (x *PerformancePara) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

//
//opcounter:
//uint64 read_bps
//uint64 write_bps
//uint64 total_bps
//uint64 read_iops
//uint64 write_iops
//uint64 total_iops
//uint64 mops
type PerformanceRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path      string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Eid       string   `protobuf:"bytes,2,opt,name=eid,proto3" json:"eid,omitempty"`
	Opcounter []uint64 `protobuf:"varint,3,rep,packed,name=opcounter,proto3" json:"opcounter,omitempty"`
}

func (x *PerformanceRet) Reset() {
	*x = PerformanceRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PerformanceRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerformanceRet) ProtoMessage() {}

func (x *PerformanceRet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerformanceRet.ProtoReflect.Descriptor instead.
func (*PerformanceRet) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{14}
}

func (x *PerformanceRet) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *PerformanceRet) GetEid() string {
	if x != nil {
		return x.Eid
	}
	return ""
}

func (x *PerformanceRet) GetOpcounter() []uint64 {
	if x != nil {
		return x.Opcounter
	}
	return nil
}

//projectquota parameter
type ManageProjectQuotaInfoPara struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// projectquota operation
	// op = 1: add projectquota
	// op = 2: list projectquota
	// op = 3: delete projectquota
	// op = 4: update projectquota
	Op uint32 `protobuf:"varint,1,opt,name=op,proto3" json:"op,omitempty"`
	// spacelimit
	Spacelimit uint64 `protobuf:"varint,2,opt,name=spacelimit,proto3" json:"spacelimit,omitempty"`
	// inodelimit
	Inodelimit uint64 `protobuf:"varint,3,opt,name=inodelimit,proto3" json:"inodelimit,omitempty"`
	// path
	Path string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	// raw
	Raw bool `protobuf:"varint,5,opt,name=raw,proto3" json:"raw,omitempty"`
	// point: recursive and force cannot be set to true at the same time
	// When delete projectquota, specify whether to delete projectquota of the directory
	// and its recursive subdirectories
	Recursive bool `protobuf:"varint,6,opt,name=recursive,proto3" json:"recursive,omitempty"`
	// When delete projectquota, specify whether to force to delete projectquota of the directory
	Force bool `protobuf:"varint,7,opt,name=force,proto3" json:"force,omitempty"`
	// When list projectquota, which means that all projectquota information with the same prefix
	Prefix bool `protobuf:"varint,8,opt,name=prefix,proto3" json:"prefix,omitempty"`
	// the entryid when delete the projectquota
	Entryid string `protobuf:"bytes,9,opt,name=entryid,proto3" json:"entryid,omitempty"`
	// verbose
	Verbose bool `protobuf:"varint,10,opt,name=verbose,proto3" json:"verbose,omitempty"`
	// update
	Update bool `protobuf:"varint,11,opt,name=update,proto3" json:"update,omitempty"`
}

func (x *ManageProjectQuotaInfoPara) Reset() {
	*x = ManageProjectQuotaInfoPara{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManageProjectQuotaInfoPara) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageProjectQuotaInfoPara) ProtoMessage() {}

func (x *ManageProjectQuotaInfoPara) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageProjectQuotaInfoPara.ProtoReflect.Descriptor instead.
func (*ManageProjectQuotaInfoPara) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{15}
}

func (x *ManageProjectQuotaInfoPara) GetOp() uint32 {
	if x != nil {
		return x.Op
	}
	return 0
}

func (x *ManageProjectQuotaInfoPara) GetSpacelimit() uint64 {
	if x != nil {
		return x.Spacelimit
	}
	return 0
}

func (x *ManageProjectQuotaInfoPara) GetInodelimit() uint64 {
	if x != nil {
		return x.Inodelimit
	}
	return 0
}

func (x *ManageProjectQuotaInfoPara) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ManageProjectQuotaInfoPara) GetRaw() bool {
	if x != nil {
		return x.Raw
	}
	return false
}

func (x *ManageProjectQuotaInfoPara) GetRecursive() bool {
	if x != nil {
		return x.Recursive
	}
	return false
}

func (x *ManageProjectQuotaInfoPara) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *ManageProjectQuotaInfoPara) GetPrefix() bool {
	if x != nil {
		return x.Prefix
	}
	return false
}

func (x *ManageProjectQuotaInfoPara) GetEntryid() string {
	if x != nil {
		return x.Entryid
	}
	return ""
}

func (x *ManageProjectQuotaInfoPara) GetVerbose() bool {
	if x != nil {
		return x.Verbose
	}
	return false
}

func (x *ManageProjectQuotaInfoPara) GetUpdate() bool {
	if x != nil {
		return x.Update
	}
	return false
}

type ProjectQuotaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// entry id
	Eid string `protobuf:"bytes,1,opt,name=eid,proto3" json:"eid,omitempty"`
	// project id
	Projectquotaid uint64 `protobuf:"varint,2,opt,name=projectquotaid,proto3" json:"projectquotaid,omitempty"`
	// spaceused
	Spaceused uint64 `protobuf:"varint,3,opt,name=spaceused,proto3" json:"spaceused,omitempty"`
	// spacelimit
	Spacelimit uint64 `protobuf:"varint,4,opt,name=spacelimit,proto3" json:"spacelimit,omitempty"`
	// inodeused
	Inodeused uint64 `protobuf:"varint,5,opt,name=inodeused,proto3" json:"inodeused,omitempty"`
	// inodelimit
	Inodelimit uint64 `protobuf:"varint,6,opt,name=inodelimit,proto3" json:"inodelimit,omitempty"`
	// dirused
	Dirused uint64 `protobuf:"varint,7,opt,name=dirused,proto3" json:"dirused,omitempty"`
	// fileused
	Fileused uint64 `protobuf:"varint,8,opt,name=fileused,proto3" json:"fileused,omitempty"`
	// path
	Path string `protobuf:"bytes,9,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *ProjectQuotaInfo) Reset() {
	*x = ProjectQuotaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectQuotaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectQuotaInfo) ProtoMessage() {}

func (x *ProjectQuotaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectQuotaInfo.ProtoReflect.Descriptor instead.
func (*ProjectQuotaInfo) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{16}
}

func (x *ProjectQuotaInfo) GetEid() string {
	if x != nil {
		return x.Eid
	}
	return ""
}

func (x *ProjectQuotaInfo) GetProjectquotaid() uint64 {
	if x != nil {
		return x.Projectquotaid
	}
	return 0
}

func (x *ProjectQuotaInfo) GetSpaceused() uint64 {
	if x != nil {
		return x.Spaceused
	}
	return 0
}

func (x *ProjectQuotaInfo) GetSpacelimit() uint64 {
	if x != nil {
		return x.Spacelimit
	}
	return 0
}

func (x *ProjectQuotaInfo) GetInodeused() uint64 {
	if x != nil {
		return x.Inodeused
	}
	return 0
}

func (x *ProjectQuotaInfo) GetInodelimit() uint64 {
	if x != nil {
		return x.Inodelimit
	}
	return 0
}

func (x *ProjectQuotaInfo) GetDirused() uint64 {
	if x != nil {
		return x.Dirused
	}
	return 0
}

func (x *ProjectQuotaInfo) GetFileused() uint64 {
	if x != nil {
		return x.Fileused
	}
	return 0
}

func (x *ProjectQuotaInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type ManageProjectQuotaInfoRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectQuotaInfoList []*ProjectQuotaInfo `protobuf:"bytes,1,rep,name=project_quota_info_list,json=projectQuotaInfoList,proto3" json:"project_quota_info_list,omitempty"`
}

func (x *ManageProjectQuotaInfoRet) Reset() {
	*x = ManageProjectQuotaInfoRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManageProjectQuotaInfoRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageProjectQuotaInfoRet) ProtoMessage() {}

func (x *ManageProjectQuotaInfoRet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageProjectQuotaInfoRet.ProtoReflect.Descriptor instead.
func (*ManageProjectQuotaInfoRet) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{17}
}

func (x *ManageProjectQuotaInfoRet) GetProjectQuotaInfoList() []*ProjectQuotaInfo {
	if x != nil {
		return x.ProjectQuotaInfoList
	}
	return nil
}

// qos parameter
type ManageQosInfoPara struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// qos operation
	// op = 1: add qos
	// op = 2: list qos
	// op = 3: delete qos
	Op uint32 `protobuf:"varint,1,opt,name=op,proto3" json:"op,omitempty"`
	// point: rbps and wbps can't be set when tbps is specified, same with tiops
	//read bps
	Rbps uint64 `protobuf:"varint,2,opt,name=rbps,proto3" json:"rbps,omitempty"`
	//write bps
	Wbps uint64 `protobuf:"varint,3,opt,name=wbps,proto3" json:"wbps,omitempty"`
	//read iops
	Riops uint64 `protobuf:"varint,4,opt,name=riops,proto3" json:"riops,omitempty"`
	//write iops
	Wiops uint64 `protobuf:"varint,5,opt,name=wiops,proto3" json:"wiops,omitempty"`
	//total bps
	Tbps uint64 `protobuf:"varint,6,opt,name=tbps,proto3" json:"tbps,omitempty"`
	//total iops
	Tiops uint64 `protobuf:"varint,7,opt,name=tiops,proto3" json:"tiops,omitempty"`
	//mds ops
	Mops uint64 `protobuf:"varint,8,opt,name=mops,proto3" json:"mops,omitempty"`
	//qos path
	Path string `protobuf:"bytes,9,opt,name=path,proto3" json:"path,omitempty"`
	// point: recursive and force cannot be set to true at the same time
	// When delete qos, specify whether to delete qos of the directory
	// and its recursive subdirectories
	Recursive bool `protobuf:"varint,10,opt,name=recursive,proto3" json:"recursive,omitempty"`
	// When delete qos, specify whether to force to delete qos of a directory
	Force bool `protobuf:"varint,11,opt,name=force,proto3" json:"force,omitempty"`
	// When list qos, which means that all qos information with the same prefix
	Prefix bool `protobuf:"varint,12,opt,name=prefix,proto3" json:"prefix,omitempty"`
}

func (x *ManageQosInfoPara) Reset() {
	*x = ManageQosInfoPara{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManageQosInfoPara) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageQosInfoPara) ProtoMessage() {}

func (x *ManageQosInfoPara) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageQosInfoPara.ProtoReflect.Descriptor instead.
func (*ManageQosInfoPara) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{18}
}

func (x *ManageQosInfoPara) GetOp() uint32 {
	if x != nil {
		return x.Op
	}
	return 0
}

func (x *ManageQosInfoPara) GetRbps() uint64 {
	if x != nil {
		return x.Rbps
	}
	return 0
}

func (x *ManageQosInfoPara) GetWbps() uint64 {
	if x != nil {
		return x.Wbps
	}
	return 0
}

func (x *ManageQosInfoPara) GetRiops() uint64 {
	if x != nil {
		return x.Riops
	}
	return 0
}

func (x *ManageQosInfoPara) GetWiops() uint64 {
	if x != nil {
		return x.Wiops
	}
	return 0
}

func (x *ManageQosInfoPara) GetTbps() uint64 {
	if x != nil {
		return x.Tbps
	}
	return 0
}

func (x *ManageQosInfoPara) GetTiops() uint64 {
	if x != nil {
		return x.Tiops
	}
	return 0
}

func (x *ManageQosInfoPara) GetMops() uint64 {
	if x != nil {
		return x.Mops
	}
	return 0
}

func (x *ManageQosInfoPara) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ManageQosInfoPara) GetRecursive() bool {
	if x != nil {
		return x.Recursive
	}
	return false
}

func (x *ManageQosInfoPara) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *ManageQosInfoPara) GetPrefix() bool {
	if x != nil {
		return x.Prefix
	}
	return false
}

type QosInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// entry id
	Eid string `protobuf:"bytes,1,opt,name=eid,proto3" json:"eid,omitempty"`
	//read bps
	Rbps uint64 `protobuf:"varint,2,opt,name=rbps,proto3" json:"rbps,omitempty"`
	//write bps
	Wbps uint64 `protobuf:"varint,3,opt,name=wbps,proto3" json:"wbps,omitempty"`
	//read iops
	Riops uint64 `protobuf:"varint,4,opt,name=riops,proto3" json:"riops,omitempty"`
	//write iops
	Wiops uint64 `protobuf:"varint,5,opt,name=wiops,proto3" json:"wiops,omitempty"`
	//total bps
	Tbps uint64 `protobuf:"varint,6,opt,name=tbps,proto3" json:"tbps,omitempty"`
	//total iops
	Tiops uint64 `protobuf:"varint,7,opt,name=tiops,proto3" json:"tiops,omitempty"`
	//mds ops
	Mops uint64 `protobuf:"varint,8,opt,name=mops,proto3" json:"mops,omitempty"`
	//qos path
	Path string `protobuf:"bytes,9,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *QosInfo) Reset() {
	*x = QosInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QosInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QosInfo) ProtoMessage() {}

func (x *QosInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QosInfo.ProtoReflect.Descriptor instead.
func (*QosInfo) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{19}
}

func (x *QosInfo) GetEid() string {
	if x != nil {
		return x.Eid
	}
	return ""
}

func (x *QosInfo) GetRbps() uint64 {
	if x != nil {
		return x.Rbps
	}
	return 0
}

func (x *QosInfo) GetWbps() uint64 {
	if x != nil {
		return x.Wbps
	}
	return 0
}

func (x *QosInfo) GetRiops() uint64 {
	if x != nil {
		return x.Riops
	}
	return 0
}

func (x *QosInfo) GetWiops() uint64 {
	if x != nil {
		return x.Wiops
	}
	return 0
}

func (x *QosInfo) GetTbps() uint64 {
	if x != nil {
		return x.Tbps
	}
	return 0
}

func (x *QosInfo) GetTiops() uint64 {
	if x != nil {
		return x.Tiops
	}
	return 0
}

func (x *QosInfo) GetMops() uint64 {
	if x != nil {
		return x.Mops
	}
	return 0
}

func (x *QosInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type ManageQosInfoRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosInfoList []*QosInfo `protobuf:"bytes,1,rep,name=qos_info_list,json=qosInfoList,proto3" json:"qos_info_list,omitempty"`
}

func (x *ManageQosInfoRet) Reset() {
	*x = ManageQosInfoRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManageQosInfoRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageQosInfoRet) ProtoMessage() {}

func (x *ManageQosInfoRet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageQosInfoRet.ProtoReflect.Descriptor instead.
func (*ManageQosInfoRet) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{20}
}

func (x *ManageQosInfoRet) GetQosInfoList() []*QosInfo {
	if x != nil {
		return x.QosInfoList
	}
	return nil
}

type ManageAclInfoPara struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// acl operation
	// op = 1: add acl
	// op = 2: list acl
	// op = 3: delete acl
	Op   uint32 `protobuf:"varint,1,opt,name=op,proto3" json:"op,omitempty"`
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// * means all ip
	Ip string `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Id string `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	// mode type
	// mode = 1: RW
	// mode = 2: RO
	Mode string `protobuf:"bytes,5,opt,name=mode,proto3" json:"mode,omitempty"`
}

func (x *ManageAclInfoPara) Reset() {
	*x = ManageAclInfoPara{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManageAclInfoPara) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageAclInfoPara) ProtoMessage() {}

func (x *ManageAclInfoPara) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageAclInfoPara.ProtoReflect.Descriptor instead.
func (*ManageAclInfoPara) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{21}
}

func (x *ManageAclInfoPara) GetOp() uint32 {
	if x != nil {
		return x.Op
	}
	return 0
}

func (x *ManageAclInfoPara) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ManageAclInfoPara) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ManageAclInfoPara) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ManageAclInfoPara) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

type AclInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path     string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Response string `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *AclInfo) Reset() {
	*x = AclInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AclInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AclInfo) ProtoMessage() {}

func (x *AclInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AclInfo.ProtoReflect.Descriptor instead.
func (*AclInfo) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{22}
}

func (x *AclInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *AclInfo) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

type ManageAclInfoRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AclInfoList []*AclInfo `protobuf:"bytes,1,rep,name=acl_info_list,json=aclInfoList,proto3" json:"acl_info_list,omitempty"`
}

func (x *ManageAclInfoRet) Reset() {
	*x = ManageAclInfoRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManageAclInfoRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageAclInfoRet) ProtoMessage() {}

func (x *ManageAclInfoRet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageAclInfoRet.ProtoReflect.Descriptor instead.
func (*ManageAclInfoRet) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{23}
}

func (x *ManageAclInfoRet) GetAclInfoList() []*AclInfo {
	if x != nil {
		return x.AclInfoList
	}
	return nil
}

type ManageGetentryInfoPara struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path           string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Verbose        bool   `protobuf:"varint,2,opt,name=verbose,proto3" json:"verbose,omitempty"`
	UseMountedPath bool   `protobuf:"varint,3,opt,name=use_mounted_path,json=useMountedPath,proto3" json:"use_mounted_path,omitempty"`
}

func (x *ManageGetentryInfoPara) Reset() {
	*x = ManageGetentryInfoPara{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManageGetentryInfoPara) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageGetentryInfoPara) ProtoMessage() {}

func (x *ManageGetentryInfoPara) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageGetentryInfoPara.ProtoReflect.Descriptor instead.
func (*ManageGetentryInfoPara) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{24}
}

func (x *ManageGetentryInfoPara) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ManageGetentryInfoPara) GetVerbose() bool {
	if x != nil {
		return x.Verbose
	}
	return false
}

func (x *ManageGetentryInfoPara) GetUseMountedPath() bool {
	if x != nil {
		return x.UseMountedPath
	}
	return false
}

type ManageGetentryInfoRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntryInfoEid          string   `protobuf:"bytes,1,opt,name=entry_info_eid,json=entryInfoEid,proto3" json:"entry_info_eid,omitempty"`
	EntryInfoPeid         string   `protobuf:"bytes,2,opt,name=entry_info_peid,json=entryInfoPeid,proto3" json:"entry_info_peid,omitempty"`
	EntryInfoIsmirrored   bool     `protobuf:"varint,3,opt,name=entry_info_ismirrored,json=entryInfoIsmirrored,proto3" json:"entry_info_ismirrored,omitempty"`
	EntryInfoOwnerNodeId  uint32   `protobuf:"varint,4,opt,name=entry_info_owner_node_id,json=entryInfoOwnerNodeId,proto3" json:"entry_info_owner_node_id,omitempty"`
	OwnerNodeTypeNodeName string   `protobuf:"bytes,5,opt,name=owner_node_type_node_name,json=ownerNodeTypeNodeName,proto3" json:"owner_node_type_node_name,omitempty"`
	MirrorNodeId          uint32   `protobuf:"varint,6,opt,name=mirror_node_id,json=mirrorNodeId,proto3" json:"mirror_node_id,omitempty"`
	MetaNodesTypeNodeName string   `protobuf:"bytes,7,opt,name=meta_nodes_type_node_name,json=metaNodesTypeNodeName,proto3" json:"meta_nodes_type_node_name,omitempty"`
	IsFile                bool     `protobuf:"varint,8,opt,name=is_file,json=isFile,proto3" json:"is_file,omitempty"`
	Layer                 string   `protobuf:"bytes,9,opt,name=layer,proto3" json:"layer,omitempty"`
	TieringId             uint64   `protobuf:"varint,10,opt,name=tiering_id,json=tieringId,proto3" json:"tiering_id,omitempty"`
	PatternType           uint32   `protobuf:"varint,11,opt,name=pattern_type,json=patternType,proto3" json:"pattern_type,omitempty"`
	PatternEntryTypeStr   string   `protobuf:"bytes,12,opt,name=pattern_entry_type_str,json=patternEntryTypeStr,proto3" json:"pattern_entry_type_str,omitempty"`
	PatternChunkSize      string   `protobuf:"bytes,13,opt,name=pattern_chunk_size,json=patternChunkSize,proto3" json:"pattern_chunk_size,omitempty"`
	StripeOsdIdsEmpty     bool     `protobuf:"varint,14,opt,name=stripe_osd_ids_empty,json=stripeOsdIdsEmpty,proto3" json:"stripe_osd_ids_empty,omitempty"`
	StripeOsdIdsSize      uint64   `protobuf:"varint,15,opt,name=stripe_osd_ids_size,json=stripeOsdIdsSize,proto3" json:"stripe_osd_ids_size,omitempty"`
	PatternDefaultNumOsds uint64   `protobuf:"varint,16,opt,name=pattern_default_num_osds,json=patternDefaultNumOsds,proto3" json:"pattern_default_num_osds,omitempty"`
	EntryTypeIsDir        bool     `protobuf:"varint,17,opt,name=entry_type_is_dir,json=entryTypeIsDir,proto3" json:"entry_type_is_dir,omitempty"`
	Pool                  bool     `protobuf:"varint,18,opt,name=pool,proto3" json:"pool,omitempty"`
	PoolGetId             uint32   `protobuf:"varint,19,opt,name=pool_get_id,json=poolGetId,proto3" json:"pool_get_id,omitempty"`
	PoolDescription       string   `protobuf:"bytes,20,opt,name=pool_description,json=poolDescription,proto3" json:"pool_description,omitempty"`
	OsdIds                []uint32 `protobuf:"varint,21,rep,packed,name=osd_ids,json=osdIds,proto3" json:"osd_ids,omitempty"`
	DentryPath            string   `protobuf:"bytes,22,opt,name=dentry_path,json=dentryPath,proto3" json:"dentry_path,omitempty"`
	ChunkPath             string   `protobuf:"bytes,23,opt,name=chunk_path,json=chunkPath,proto3" json:"chunk_path,omitempty"`
	PrintInodeHashPath    bool     `protobuf:"varint,24,opt,name=print_inode_hash_path,json=printInodeHashPath,proto3" json:"print_inode_hash_path,omitempty"`
	HashPath              string   `protobuf:"bytes,25,opt,name=hash_path,json=hashPath,proto3" json:"hash_path,omitempty"`
}

func (x *ManageGetentryInfoRet) Reset() {
	*x = ManageGetentryInfoRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManageGetentryInfoRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageGetentryInfoRet) ProtoMessage() {}

func (x *ManageGetentryInfoRet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageGetentryInfoRet.ProtoReflect.Descriptor instead.
func (*ManageGetentryInfoRet) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{25}
}

func (x *ManageGetentryInfoRet) GetEntryInfoEid() string {
	if x != nil {
		return x.EntryInfoEid
	}
	return ""
}

func (x *ManageGetentryInfoRet) GetEntryInfoPeid() string {
	if x != nil {
		return x.EntryInfoPeid
	}
	return ""
}

func (x *ManageGetentryInfoRet) GetEntryInfoIsmirrored() bool {
	if x != nil {
		return x.EntryInfoIsmirrored
	}
	return false
}

func (x *ManageGetentryInfoRet) GetEntryInfoOwnerNodeId() uint32 {
	if x != nil {
		return x.EntryInfoOwnerNodeId
	}
	return 0
}

func (x *ManageGetentryInfoRet) GetOwnerNodeTypeNodeName() string {
	if x != nil {
		return x.OwnerNodeTypeNodeName
	}
	return ""
}

func (x *ManageGetentryInfoRet) GetMirrorNodeId() uint32 {
	if x != nil {
		return x.MirrorNodeId
	}
	return 0
}

func (x *ManageGetentryInfoRet) GetMetaNodesTypeNodeName() string {
	if x != nil {
		return x.MetaNodesTypeNodeName
	}
	return ""
}

func (x *ManageGetentryInfoRet) GetIsFile() bool {
	if x != nil {
		return x.IsFile
	}
	return false
}

func (x *ManageGetentryInfoRet) GetLayer() string {
	if x != nil {
		return x.Layer
	}
	return ""
}

func (x *ManageGetentryInfoRet) GetTieringId() uint64 {
	if x != nil {
		return x.TieringId
	}
	return 0
}

func (x *ManageGetentryInfoRet) GetPatternType() uint32 {
	if x != nil {
		return x.PatternType
	}
	return 0
}

func (x *ManageGetentryInfoRet) GetPatternEntryTypeStr() string {
	if x != nil {
		return x.PatternEntryTypeStr
	}
	return ""
}

func (x *ManageGetentryInfoRet) GetPatternChunkSize() string {
	if x != nil {
		return x.PatternChunkSize
	}
	return ""
}

func (x *ManageGetentryInfoRet) GetStripeOsdIdsEmpty() bool {
	if x != nil {
		return x.StripeOsdIdsEmpty
	}
	return false
}

func (x *ManageGetentryInfoRet) GetStripeOsdIdsSize() uint64 {
	if x != nil {
		return x.StripeOsdIdsSize
	}
	return 0
}

func (x *ManageGetentryInfoRet) GetPatternDefaultNumOsds() uint64 {
	if x != nil {
		return x.PatternDefaultNumOsds
	}
	return 0
}

func (x *ManageGetentryInfoRet) GetEntryTypeIsDir() bool {
	if x != nil {
		return x.EntryTypeIsDir
	}
	return false
}

func (x *ManageGetentryInfoRet) GetPool() bool {
	if x != nil {
		return x.Pool
	}
	return false
}

func (x *ManageGetentryInfoRet) GetPoolGetId() uint32 {
	if x != nil {
		return x.PoolGetId
	}
	return 0
}

func (x *ManageGetentryInfoRet) GetPoolDescription() string {
	if x != nil {
		return x.PoolDescription
	}
	return ""
}

func (x *ManageGetentryInfoRet) GetOsdIds() []uint32 {
	if x != nil {
		return x.OsdIds
	}
	return nil
}

func (x *ManageGetentryInfoRet) GetDentryPath() string {
	if x != nil {
		return x.DentryPath
	}
	return ""
}

func (x *ManageGetentryInfoRet) GetChunkPath() string {
	if x != nil {
		return x.ChunkPath
	}
	return ""
}

func (x *ManageGetentryInfoRet) GetPrintInodeHashPath() bool {
	if x != nil {
		return x.PrintInodeHashPath
	}
	return false
}

func (x *ManageGetentryInfoRet) GetHashPath() string {
	if x != nil {
		return x.HashPath
	}
	return ""
}

type ManageListdirInfoPara struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path           string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	UseMountedPath bool   `protobuf:"varint,2,opt,name=use_mounted_path,json=useMountedPath,proto3" json:"use_mounted_path,omitempty"`
}

func (x *ManageListdirInfoPara) Reset() {
	*x = ManageListdirInfoPara{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManageListdirInfoPara) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageListdirInfoPara) ProtoMessage() {}

func (x *ManageListdirInfoPara) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageListdirInfoPara.ProtoReflect.Descriptor instead.
func (*ManageListdirInfoPara) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{26}
}

func (x *ManageListdirInfoPara) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ManageListdirInfoPara) GetUseMountedPath() bool {
	if x != nil {
		return x.UseMountedPath
	}
	return false
}

type ListdirInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntryTypes string `protobuf:"bytes,1,opt,name=entry_types,json=entryTypes,proto3" json:"entry_types,omitempty"`
	EntryNames string `protobuf:"bytes,2,opt,name=entry_names,json=entryNames,proto3" json:"entry_names,omitempty"`
}

func (x *ListdirInfo) Reset() {
	*x = ListdirInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListdirInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListdirInfo) ProtoMessage() {}

func (x *ListdirInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListdirInfo.ProtoReflect.Descriptor instead.
func (*ListdirInfo) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{27}
}

func (x *ListdirInfo) GetEntryTypes() string {
	if x != nil {
		return x.EntryTypes
	}
	return ""
}

func (x *ListdirInfo) GetEntryNames() string {
	if x != nil {
		return x.EntryNames
	}
	return ""
}

type ManageListdirInfoRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListdirInfoList []*ListdirInfo `protobuf:"bytes,1,rep,name=listdir_info_list,json=listdirInfoList,proto3" json:"listdir_info_list,omitempty"`
}

func (x *ManageListdirInfoRet) Reset() {
	*x = ManageListdirInfoRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManageListdirInfoRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageListdirInfoRet) ProtoMessage() {}

func (x *ManageListdirInfoRet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageListdirInfoRet.ProtoReflect.Descriptor instead.
func (*ManageListdirInfoRet) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{28}
}

func (x *ManageListdirInfoRet) GetListdirInfoList() []*ListdirInfo {
	if x != nil {
		return x.ListdirInfoList
	}
	return nil
}

var File_proto_agent_proto protoreflect.FileDescriptor

var file_proto_agent_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xb2, 0x01, 0x0a, 0x0f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x50, 0x61, 0x72, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x68, 0x69, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x70, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0f, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x70, 0x73,
	0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x7a, 0x65, 0x72, 0x6f, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x72, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x11,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x54, 0x79, 0x70, 0x65, 0x22, 0x58, 0x0a, 0x0e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0a, 0x6f, 0x70, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x73, 0x22, 0x2d, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x61, 0x49, 0x6e, 0x66, 0x6f,
	0x50, 0x61, 0x72, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x72, 0x6f, 0x6f,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x77, 0x69, 0x74, 0x68, 0x52, 0x6f, 0x6f,
	0x74, 0x22, 0x5b, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6c, 0x61, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x04, 0x52, 0x08, 0x73, 0x6c, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35,
	0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x61, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e,
	0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0b, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x75, 0x6d, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x29, 0x0a, 0x0f, 0x4d, 0x64, 0x73, 0x4f,
	0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x50, 0x61, 0x72, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x6e, 0x75, 0x73, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x6e, 0x75,
	0x73, 0x65, 0x64, 0x22, 0xc4, 0x02, 0x0a, 0x0e, 0x4d, 0x64, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x76,
	0x69, 0x65, 0x77, 0x52, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0e, 0x64, 0x69, 0x73, 0x6b, 0x53, 0x70, 0x61, 0x63, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x26, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x66,
	0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x6b, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x46, 0x72, 0x65, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x6b,
	0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x6b, 0x53, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x65, 0x64,
	0x12, 0x28, 0x0a, 0x10, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f,
	0x75, 0x73, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x69, 0x6e, 0x6f, 0x64,
	0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x09, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2f, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x33, 0x0a, 0x0f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x29, 0x0a, 0x0f, 0x4f, 0x73,
	0x73, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x50, 0x61, 0x72, 0x61, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x6e, 0x75, 0x73, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75,
	0x6e, 0x75, 0x73, 0x65, 0x64, 0x22, 0xe6, 0x03, 0x0a, 0x0e, 0x4f, 0x73, 0x73, 0x4f, 0x76, 0x65,
	0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x69, 0x73, 0x6b,
	0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x6b, 0x53, 0x70, 0x61, 0x63, 0x65, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x5f, 0x66, 0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x64, 0x69, 0x73,
	0x6b, 0x53, 0x70, 0x61, 0x63, 0x65, 0x46, 0x72, 0x65, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x69,
	0x73, 0x6b, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x6b, 0x53, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73,
	0x65, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f,
	0x73, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x6b, 0x52,
	0x65, 0x61, 0x64, 0x53, 0x75, 0x6d, 0x12, 0x24, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x64, 0x69, 0x73, 0x6b, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x75, 0x6d, 0x12, 0x28, 0x0a, 0x09,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x30, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x70,
	0x65, 0x72, 0x66, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x6b,
	0x50, 0x65, 0x72, 0x66, 0x52, 0x65, 0x61, 0x64, 0x12, 0x3f, 0x0a, 0x16, 0x64, 0x69, 0x73, 0x6b,
	0x5f, 0x70, 0x65, 0x72, 0x66, 0x5f, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65,
	0x61, 0x64, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x13, 0x64, 0x69, 0x73, 0x6b, 0x50, 0x65, 0x72, 0x66, 0x41, 0x76,
	0x65, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x64, 0x12, 0x32, 0x0a, 0x0f, 0x64, 0x69, 0x73,
	0x6b, 0x5f, 0x70, 0x65, 0x72, 0x66, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d,
	0x64, 0x69, 0x73, 0x6b, 0x50, 0x65, 0x72, 0x66, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x3f, 0x0a,
	0x16, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67,
	0x65, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x13, 0x64, 0x69, 0x73, 0x6b, 0x50,
	0x65, 0x72, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x22, 0x68,
	0x0a, 0x0c, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x68, 0x69, 0x64, 0x65, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x70, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49,
	0x70, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x22, 0x5b, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6e,
	0x6f, 0x64, 0x65, 0x4e, 0x75, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x37, 0x0a, 0x0b, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x22, 0x25,
	0x0a, 0x0f, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x54, 0x0a, 0x0e, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x69, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x6f, 0x70, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04,
	0x52, 0x09, 0x6f, 0x70, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x22, 0xaa, 0x02, 0x0a, 0x1a,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x51, 0x75, 0x6f,
	0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e,
	0x6f, 0x64, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x69, 0x6e, 0x6f, 0x64, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x10,
	0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x72, 0x61, 0x77,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x62, 0x6f, 0x73,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x76, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x92, 0x02, 0x0a, 0x10, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a,
	0x03, 0x65, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x69, 0x64, 0x12,
	0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x71, 0x75, 0x6f, 0x74, 0x61, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x75, 0x73, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x75, 0x73, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x75, 0x73,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x75,
	0x73, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x72, 0x75, 0x73, 0x65, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x64, 0x69, 0x72, 0x75, 0x73, 0x65, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x75, 0x73, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x75, 0x73, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x65, 0x0a,
	0x19, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x51, 0x75,
	0x6f, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x74, 0x12, 0x48, 0x0a, 0x17, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x14,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x95, 0x02, 0x0a, 0x11, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x51,
	0x6f, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x62,
	0x70, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x72, 0x62, 0x70, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x77, 0x62, 0x70, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x77, 0x62,
	0x70, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x69, 0x6f, 0x70, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x72, 0x69, 0x6f, 0x70, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x6f, 0x70,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x77, 0x69, 0x6f, 0x70, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x62, 0x70, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x62,
	0x70, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x6f, 0x70, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x74, 0x69, 0x6f, 0x70, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x70, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x6d, 0x6f, 0x70, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x22, 0xc1, 0x01, 0x0a,
	0x07, 0x51, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x62,
	0x70, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x72, 0x62, 0x70, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x77, 0x62, 0x70, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x77, 0x62,
	0x70, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x69, 0x6f, 0x70, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x72, 0x69, 0x6f, 0x70, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x6f, 0x70,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x77, 0x69, 0x6f, 0x70, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x62, 0x70, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x62,
	0x70, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x6f, 0x70, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x74, 0x69, 0x6f, 0x70, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x70, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x6d, 0x6f, 0x70, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x22, 0x40, 0x0a, 0x10, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x51, 0x6f, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x74, 0x12, 0x2c, 0x0a, 0x0d, 0x71, 0x6f, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x51, 0x6f,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x71, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x6b, 0x0a, 0x11, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x41, 0x63, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22,
	0x39, 0x0a, 0x07, 0x41, 0x63, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x40, 0x0a, 0x10, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x41, 0x63, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x74, 0x12, 0x2c,
	0x0a, 0x0d, 0x61, 0x63, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x41, 0x63, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0b, 0x61, 0x63, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x70, 0x0a, 0x16,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x62, 0x6f, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x62, 0x6f, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e,
	0x75, 0x73, 0x65, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x50, 0x61, 0x74, 0x68, 0x22, 0x8b,
	0x08, 0x0a, 0x15, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x65, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x69, 0x64, 0x12, 0x26,
	0x0a, 0x0f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x70, 0x65, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x50, 0x65, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x69, 0x73, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x49, 0x73, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x18, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x12, 0x38, 0x0a, 0x19, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e,
	0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x4e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x12, 0x38, 0x0a, 0x19, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x6d, 0x65, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69,
	0x73, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x74, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x33, 0x0a,
	0x16, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x70,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x53,
	0x74, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x5f, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x2f, 0x0a, 0x14, 0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x5f, 0x6f, 0x73, 0x64, 0x5f, 0x69,
	0x64, 0x73, 0x5f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11,
	0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x4f, 0x73, 0x64, 0x49, 0x64, 0x73, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x2d, 0x0a, 0x13, 0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x5f, 0x6f, 0x73, 0x64, 0x5f,
	0x69, 0x64, 0x73, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10,
	0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x4f, 0x73, 0x64, 0x49, 0x64, 0x73, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x37, 0x0a, 0x18, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x5f, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x5f, 0x6f, 0x73, 0x64, 0x73, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x15, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x4e, 0x75, 0x6d, 0x4f, 0x73, 0x64, 0x73, 0x12, 0x29, 0x0a, 0x11, 0x65, 0x6e, 0x74,
	0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x73, 0x44, 0x69, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x12, 0x1e, 0x0a, 0x0b, 0x70, 0x6f, 0x6f, 0x6c,
	0x5f, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70,
	0x6f, 0x6f, 0x6c, 0x47, 0x65, 0x74, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x6f, 0x6f, 0x6c,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x70, 0x6f, 0x6f, 0x6c, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x73, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x15,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x73, 0x64, 0x49, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x64, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x50, 0x61, 0x74, 0x68, 0x12, 0x31, 0x0a, 0x15,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x70, 0x72, 0x69,
	0x6e, 0x74, 0x49, 0x6e, 0x6f, 0x64, 0x65, 0x48, 0x61, 0x73, 0x68, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x1b, 0x0a, 0x09, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x68, 0x61, 0x73, 0x68, 0x50, 0x61, 0x74, 0x68, 0x22, 0x55, 0x0a, 0x15,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x64, 0x69, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x50, 0x61, 0x72, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x28, 0x0a, 0x10, 0x75, 0x73, 0x65,
	0x5f, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x50,
	0x61, 0x74, 0x68, 0x22, 0x4f, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x64, 0x69, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x22, 0x50, 0x0a, 0x14, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x64, 0x69, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x74, 0x12, 0x38, 0x0a, 0x11,
	0x6c, 0x69, 0x73, 0x74, 0x64, 0x69, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x64, 0x69,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x6c, 0x69, 0x73, 0x74, 0x64, 0x69, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x32, 0x9d, 0x05, 0x0a, 0x05, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x12, 0x34, 0x0a, 0x0b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12,
	0x10, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x50, 0x61, 0x72,
	0x61, 0x1a, 0x0f, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52,
	0x65, 0x74, 0x22, 0x00, 0x30, 0x01, 0x12, 0x31, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x61,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x61, 0x49, 0x6e, 0x66,
	0x6f, 0x50, 0x61, 0x72, 0x61, 0x1a, 0x0e, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x61, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x74, 0x22, 0x00, 0x30, 0x01, 0x12, 0x32, 0x0a, 0x0b, 0x4d, 0x64, 0x73,
	0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12, 0x10, 0x2e, 0x4d, 0x64, 0x73, 0x4f, 0x76,
	0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x50, 0x61, 0x72, 0x61, 0x1a, 0x0f, 0x2e, 0x4d, 0x64, 0x73,
	0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x74, 0x22, 0x00, 0x12, 0x32, 0x0a,
	0x0b, 0x4f, 0x73, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12, 0x10, 0x2e, 0x4f,
	0x73, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x50, 0x61, 0x72, 0x61, 0x1a, 0x0f,
	0x2e, 0x4f, 0x73, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x74, 0x22,
	0x00, 0x12, 0x2b, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0d, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x1a, 0x0c, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x74, 0x22, 0x00, 0x30, 0x01, 0x12, 0x34,
	0x0a, 0x0b, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x10, 0x2e,
	0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x61, 0x72, 0x61, 0x1a,
	0x0f, 0x2e, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x74,
	0x22, 0x00, 0x30, 0x01, 0x12, 0x55, 0x0a, 0x16, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b,
	0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x51, 0x75,
	0x6f, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x1a, 0x1a, 0x2e, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x74, 0x22, 0x00, 0x30, 0x01, 0x12, 0x3a, 0x0a, 0x0d, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x51, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x2e, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x51, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x72, 0x61,
	0x1a, 0x11, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x51, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x74, 0x22, 0x00, 0x30, 0x01, 0x12, 0x3a, 0x0a, 0x0d, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x41, 0x63, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x41, 0x63, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x1a, 0x11, 0x2e, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x41, 0x63, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x74, 0x22,
	0x00, 0x30, 0x01, 0x12, 0x49, 0x0a, 0x12, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x2e, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x47, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61,
	0x72, 0x61, 0x1a, 0x16, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x74, 0x22, 0x00, 0x30, 0x01, 0x12, 0x46,
	0x0a, 0x11, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x64, 0x69, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x64, 0x69, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x1a, 0x15, 0x2e, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x64, 0x69, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x74, 0x22, 0x00, 0x30, 0x01, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x3b, 0x5f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_agent_proto_rawDescOnce sync.Once
	file_proto_agent_proto_rawDescData = file_proto_agent_proto_rawDesc
)

func file_proto_agent_proto_rawDescGZIP() []byte {
	file_proto_agent_proto_rawDescOnce.Do(func() {
		file_proto_agent_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_agent_proto_rawDescData)
	})
	return file_proto_agent_proto_rawDescData
}

var file_proto_agent_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_proto_agent_proto_goTypes = []interface{}{
	(*ClientStatsPara)(nil),            // 0: ClientStatsPara
	(*ClientStatsRet)(nil),             // 1: ClientStatsRet
	(*GetSlaInfoPara)(nil),             // 2: GetSlaInfoPara
	(*GetSlaInfoRet)(nil),              // 3: GetSlaInfoRet
	(*TimeValue)(nil),                  // 4: TimeValue
	(*ServerNode)(nil),                 // 5: ServerNode
	(*MdsOverviewPara)(nil),            // 6: MdsOverviewPara
	(*MdsOverviewRet)(nil),             // 7: MdsOverviewRet
	(*OssOverviewPara)(nil),            // 8: OssOverviewPara
	(*OssOverviewRet)(nil),             // 9: OssOverviewRet
	(*NodeListPara)(nil),               // 10: NodeListPara
	(*NodeInfo)(nil),                   // 11: NodeInfo
	(*NodeListRet)(nil),                // 12: NodeListRet
	(*PerformancePara)(nil),            // 13: PerformancePara
	(*PerformanceRet)(nil),             // 14: PerformanceRet
	(*ManageProjectQuotaInfoPara)(nil), // 15: ManageProjectQuotaInfoPara
	(*ProjectQuotaInfo)(nil),           // 16: ProjectQuotaInfo
	(*ManageProjectQuotaInfoRet)(nil),  // 17: ManageProjectQuotaInfoRet
	(*ManageQosInfoPara)(nil),          // 18: ManageQosInfoPara
	(*QosInfo)(nil),                    // 19: QosInfo
	(*ManageQosInfoRet)(nil),           // 20: ManageQosInfoRet
	(*ManageAclInfoPara)(nil),          // 21: ManageAclInfoPara
	(*AclInfo)(nil),                    // 22: AclInfo
	(*ManageAclInfoRet)(nil),           // 23: ManageAclInfoRet
	(*ManageGetentryInfoPara)(nil),     // 24: ManageGetentryInfoPara
	(*ManageGetentryInfoRet)(nil),      // 25: ManageGetentryInfoRet
	(*ManageListdirInfoPara)(nil),      // 26: ManageListdirInfoPara
	(*ListdirInfo)(nil),                // 27: ListdirInfo
	(*ManageListdirInfoRet)(nil),       // 28: ManageListdirInfoRet
}
var file_proto_agent_proto_depIdxs = []int32{
	5,  // 0: MdsOverviewRet.node_info:type_name -> ServerNode
	4,  // 1: MdsOverviewRet.work_requests:type_name -> TimeValue
	4,  // 2: MdsOverviewRet.queued_requests:type_name -> TimeValue
	5,  // 3: OssOverviewRet.node_info:type_name -> ServerNode
	4,  // 4: OssOverviewRet.disk_perf_read:type_name -> TimeValue
	4,  // 5: OssOverviewRet.disk_perf_average_read:type_name -> TimeValue
	4,  // 6: OssOverviewRet.disk_perf_write:type_name -> TimeValue
	4,  // 7: OssOverviewRet.disk_per_average_write:type_name -> TimeValue
	11, // 8: NodeListRet.node_lists:type_name -> NodeInfo
	16, // 9: ManageProjectQuotaInfoRet.project_quota_info_list:type_name -> ProjectQuotaInfo
	19, // 10: ManageQosInfoRet.qos_info_list:type_name -> QosInfo
	22, // 11: ManageAclInfoRet.acl_info_list:type_name -> AclInfo
	27, // 12: ManageListdirInfoRet.listdir_info_list:type_name -> ListdirInfo
	0,  // 13: Agent.ClientStats:input_type -> ClientStatsPara
	2,  // 14: Agent.GetSlaInfo:input_type -> GetSlaInfoPara
	6,  // 15: Agent.MdsOverview:input_type -> MdsOverviewPara
	8,  // 16: Agent.OssOverview:input_type -> OssOverviewPara
	10, // 17: Agent.NodeList:input_type -> NodeListPara
	13, // 18: Agent.Performance:input_type -> PerformancePara
	15, // 19: Agent.ManageProjectQuotaInfo:input_type -> ManageProjectQuotaInfoPara
	18, // 20: Agent.ManageQosInfo:input_type -> ManageQosInfoPara
	21, // 21: Agent.ManageAclInfo:input_type -> ManageAclInfoPara
	24, // 22: Agent.ManageGetentryInfo:input_type -> ManageGetentryInfoPara
	26, // 23: Agent.ManageListdirInfo:input_type -> ManageListdirInfoPara
	1,  // 24: Agent.ClientStats:output_type -> ClientStatsRet
	3,  // 25: Agent.GetSlaInfo:output_type -> GetSlaInfoRet
	7,  // 26: Agent.MdsOverview:output_type -> MdsOverviewRet
	9,  // 27: Agent.OssOverview:output_type -> OssOverviewRet
	12, // 28: Agent.NodeList:output_type -> NodeListRet
	14, // 29: Agent.Performance:output_type -> PerformanceRet
	17, // 30: Agent.ManageProjectQuotaInfo:output_type -> ManageProjectQuotaInfoRet
	20, // 31: Agent.ManageQosInfo:output_type -> ManageQosInfoRet
	23, // 32: Agent.ManageAclInfo:output_type -> ManageAclInfoRet
	25, // 33: Agent.ManageGetentryInfo:output_type -> ManageGetentryInfoRet
	28, // 34: Agent.ManageListdirInfo:output_type -> ManageListdirInfoRet
	24, // [24:35] is the sub-list for method output_type
	13, // [13:24] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_proto_agent_proto_init() }
func file_proto_agent_proto_init() {
	if File_proto_agent_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_agent_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientStatsPara); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientStatsRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSlaInfoPara); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSlaInfoRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MdsOverviewPara); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MdsOverviewRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OssOverviewPara); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OssOverviewRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeListPara); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeListRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PerformancePara); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PerformanceRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManageProjectQuotaInfoPara); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectQuotaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManageProjectQuotaInfoRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManageQosInfoPara); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QosInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManageQosInfoRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManageAclInfoPara); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AclInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManageAclInfoRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManageGetentryInfoPara); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManageGetentryInfoRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManageListdirInfoPara); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListdirInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManageListdirInfoRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_agent_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_agent_proto_goTypes,
		DependencyIndexes: file_proto_agent_proto_depIdxs,
		MessageInfos:      file_proto_agent_proto_msgTypes,
	}.Build()
	File_proto_agent_proto = out.File
	file_proto_agent_proto_rawDesc = nil
	file_proto_agent_proto_goTypes = nil
	file_proto_agent_proto_depIdxs = nil
}
